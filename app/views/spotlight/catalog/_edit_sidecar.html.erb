<%= f.fields_for :sidecar, document.sidecar(current_exhibit) do |c| %>
  <%= c.fields_for :data do |d| %>
    <% if document.uploaded_resource? %>
      <%= d.fields_for :configured_fields do |e| %>
        <% Spotlight::Resources::Upload.fields(current_exhibit).each do |config| %>
          <%= e.send(config.form_field_type, config.field_name, value: (document.sidecar(current_exhibit).data["configured_fields"] || {})[config.field_name.to_s], label: uploaded_field_label(config)) %>
        <% end %>
      <% end %>
    <% end %>

    <%# Using `includes(:exhibit)` to ensure all fields are using the same exhibit object to take advantage of memoization %>
    <% current_exhibit.custom_fields.includes(:exhibit).each do |field| %>
      <% data = document.sidecar(current_exhibit).data %>
      <%= render partial: "spotlight/custom_fields/form_group/#{field.field_type}", locals: { f: d, field: field, value: data[field.slug.to_s] || data[field.field.to_s] }  %>

      <% unless field.configured_to_display? %>
        <p class="bg-warning help-block">
          <%= t(:'.blank_field_warning_html',
                link: link_to(t(:'spotlight.configuration.sidebar.metadata'), spotlight.edit_exhibit_metadata_configuration_path(current_exhibit))) %>
        </p>
      <% end %>
    <% end %>
  <% end %>
<% end %>
