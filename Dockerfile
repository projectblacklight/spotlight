# syntax = docker/dockerfile:1

# This Dockerfile is designed for production, not development. Use with Kamal or build'n'run by hand:
# docker build -t my-app .
# docker run -d -p 80:80 -p 443:443 --name my-app -e RAILS_MASTER_KEY=<value from config/master.key> my-app

ARG RUBY_VERSION=3.3.4
FROM docker.io/library/ruby:$RUBY_VERSION-slim

ARG RAILS_VERSION=7.1.3.4

# Rails app lives here
WORKDIR /spotlight

# Install base packages
RUN apt-get update -qq && \
  apt-get install --no-install-recommends -y curl netcat-traditional libjemalloc2 libsqlite3-0 imagemagick libpq-dev build-essential nodejs git pkg-config && \
  rm -rf /var/lib/apt/lists /var/cache/apt/archives

RUN gem install --no-document rails -v $RAILS_VERSION

COPY template.rb template.rb

# Install application gems
RUN SKIP_TRANSLATION=yes rails new . --skip-git --skip-keeps --skip-dev-gems --skip-rubocop --skip-test --skip-action-cable --skip-active-storage --skip-action-text --skip-action-mailbox --template template.rb
# Generated by Rails, but we're relying on the one in app/assets/javascripts/application.js instead
RUN rm app/javascript/application.js

# We don't want any credentials in the container
RUN rm config/master.key

RUN bundle add pg
# RUN SECRET_KEY_BASE_DUMMY=1 ./bin/rails assets:precompile

# Set production environment
# ENV RAILS_ENV="production" \
#   BUNDLE_DEPLOYMENT="1" \
#   BUNDLE_PATH="/usr/local/bundle" \
#   BUNDLE_WITHOUT="development"


# Run and own only the runtime files as a non-root user for security
RUN groupadd --system --gid 1000 rails && \
  useradd rails --uid 1000 --gid 1000 --create-home --shell /bin/bash && \
  chown -R rails:rails db log storage tmp
USER 1000:1000

# Entrypoint prepares the database.
ENTRYPOINT ["/spotlight/bin/docker-entrypoint"]

# Start the server by default, this can be overwritten at runtime
EXPOSE 3000
CMD ["./bin/rails", "server"]
